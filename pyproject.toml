[build-system]
requires = ["scikit-build-core-conan", "cython >=3.0"]
build-backend = "scikit_build_core_conan.build"

[project]
name = "pyncbitk"
version = "0.0.1"
requires-python = ">=3.7"

[tool.scikit-build-core-conan]
path = "."
build = "missing"
options = []
settings = []
config = []
output_folder = "build"

[tool.scikit-build]
build-dir = "build/{build_type}/build"
cmake.build-type = "Release"
editable.rebuild = false #true
editable.verbose = false

[tool.scikit-build.cmake.define]
PYNCBITK_INSTALL_LIBS = { env = "PYNCBITK_INSTALL_LIBS", default = true }
PYNCBITK_DISABLE_SSE4 = { env = "PYNCBITK_DISABLE_SSE4", default = false }

[[tool.scikit-build.overrides]]
if.state = "editable"
cmake.build-type = "Debug"

[[tool.scikit-build-overrides]]
if.env.SCCACHE = true
cmake.define.CMAKE_C_COMPILER_LAUNCHER = "sccache"
cmake.define.CMAKE_CXX_COMPILER_LAUNCHER = "sccache"

[[tool.scikit-build-overrides]]
if.env.MOLD = true
cmake.define.CMAKE_LINKER_TYPE = "mold"

[[tool.scikit-build-overrides]]
if.env.CIBUILDWHEEL = true
cmake.define.PYNCBITK_INSTALL_LIBS = false

[tool.cibuildwheel]
before-build = ["pip install scikit-build-core-conan cython"]
build-frontend = { name = "pip", args = ["--no-build-isolation"] }
build-verbosity = 1
free-threaded-support = false
#manylinux-x86_64-image = "quay.io/pypa/manylinux_2_34_x86_64"
manylinux-x86_64-image = "pyncbitk-manylinux_2_34"
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"

[tool.cibuildwheel.macos]
environment = { MACOSX_DEPLOYMENT_TARGET = "10.12" }
archs = ["x86_64", "arm64"]
